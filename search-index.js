crystal_doc_search_index_callback({"repository_name":"ipapi","body":"# ipapi-crystal\n\n[![Crystal CI](https://github.com/geocrystal/ipapi-crystal/actions/workflows/crystal.yml/badge.svg)](https://github.com/geocrystal/ipapi-crystal/actions/workflows/crystal.yml)\n[![GitHub release](https://img.shields.io/github/release/geocrystal/ipapi-crystal.svg)](https://github.com/geocrystal/ipapi-crystal/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://geocrystal.github.io/ipapi-crystal/)\n[![License](https://img.shields.io/github/license/geocrystal/ipapi-crystal.svg)](https://github.com/geocrystal/ipapi-crystal/blob/main/LICENSE)\n\nCrystal bindings for <https://ipapi.co> (IP Address Location & Geolocation API)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     ipapi:\n       github: geocrystal/ipapi-crystal\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"ipapi\"\n\nclient = Ipapi::Client.new\n\nlocation = client.locate(\"8.8.8.8\")\n# => #<Ipapi::Location:0x780aff839b40 @ip=\"8.8.8.8\", @network=\"8.8.8.0/24\", @version=\"IPv4\", @city=\"Mountain View\", @region=\"California\", @region_code=\"CA\", @country=\"US\", @country_name=\"United States\", @country_code=\"US\", @country_code_iso3=\"USA\", @country_capital=\"Washington\", @country_tld=\".us\", @continent_code=\"NA\", @in_eu=false, @postal=\"94043\", @latitude=37.42301, @longitude=-122.083352, @timezone=\"America/Los_Angeles\", @utc_offset=\"-0700\", @country_calling_code=\"+1\", @currency=\"USD\", @currency_name=\"Dollar\", @languages=\"en-US,es-US,haw,fr\", @country_area=9629091.0, @country_population=327167434, @asn=\"AS15169\", @org=\"GOOGLE\">\n\nlocation.ip                   # \"8.8.8.8\"\nlocation.network              # \"8.8.8.0/24\"\nlocation.version              # \"IPv4\"\nlocation.city                 # \"Mountain View\"\nlocation.region               # \"California\"\nlocation.region_code          # \"CA\"\nlocation.country              # \"US\"\nlocation.country_name         # \"United States\"\nlocation.country_code         # \"US\"\nlocation.country_code_iso3    # \"USA\"\nlocation.country_capital      # \"Washington\"\nlocation.country_tld          # \".us\"\nlocation.continent_code       # \"NA\"\nlocation.in_eu?               # false\nlocation.postal               # \"95843\"\nlocation.latitude             # 37.42301\nlocation.longitude            # -122.083352\nlocation.timezone             # \"America/Los_Angeles\"\nlocation.utc_offset           # \"-0700\"\nlocation.country_calling_code # \"+1\"\nlocation.currency             # \"USD\"\nlocation.currency_name        # \"Dollar\"\nlocation.languages            # \"en-US,es-US,haw,fr\"\nlocation.country_area         # 9629091.0\nlocation.country_population   # 327167434\nlocation.asn                  # \"AS7065\"\nlocation.org                  # \"SNIC\"\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/geocrystal/ipapi-crystal/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Anton Maminov](https://github.com/mamantoha) - creator and maintainer\n","program":{"html_id":"ipapi/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"ipapi","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"ipapi/Ipapi","path":"Ipapi.html","kind":"module","full_name":"Ipapi","name":"Ipapi","abstract":false,"locations":[{"filename":"src/ipapi.cr","line_number":7,"url":null}],"repository_name":"ipapi","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"API_URL","name":"API_URL","value":"\"https://ipapi.co/\""},{"id":"FIELDS","name":"FIELDS","value":"{\"ip\" => \"public (external) IP address (same as URL `ip`)\", \"city\" => \"city name\", \"region\" => \"region name (administrative division)\", \"region_code\" => \"region code\", \"country\" => \"country code (2 letter, ISO 3166-1 alpha-2)\", \"country_code\" => \"country code (2 letter, ISO 3166-1 alpha-2)\", \"country_code_iso3\" => \"country code (3 letter, ISO 3166-1 alpha-3)\", \"country_name\" => \"short country name\", \"country_capital\" => \"capital of the country\", \"country_tld\" => \"country specific TLD (top-level domain)\", \"country_area\" => \"area of the country (in sq km)\", \"country_population\" => \"population of the country\", \"continent_code\" => \"country code (2 letter, ISO 3166-1 alpha-2)\", \"in_eu\" => \"whether IP address belongs to a country that is a member of the European Union (EU)\", \"postal\" => \"postal code / zip code\", \"latitude\" => \"latitude\", \"longitude\" => \"longitude\", \"latlong\" => \"comma separated latitude and longitude\", \"timezone\" => \"timezone (IANA format i.e. “Area/Location”)\", \"utc_offset\" => \"UTC offset (with daylight saving time) as `+HHMM` or `-HHMM` (`HH` is hours, `MM` is minutes)\", \"country_calling_code\" => \"country calling code (dial in code, comma separated)\", \"currency\" => \"currency code (ISO 4217)\", \"currency_name\" => \"currency name\", \"languages\" => \"languages spoken (comma separated 2 or 3 letter ISO 639 code with optional hyphen separated country suffix)\", \"asn\" => \"autonomous system number\", \"org\" => \"organization name\"}","doc":"https://ipapi.co/api/#specific-location-field","summary":"<p>https://ipapi.co/api/#specific-location-field</p>"},{"id":"VERSION","name":"VERSION","value":"{{ (`shards version /__w/ipapi-crystal/ipapi-crystal/src`).chomp.stringify }}"}],"doc":"Crystal bindings for https://ipapi.co (IP Address Location & Geolocation API)\n\nAPI Docs : https://ipapi.co/api/","summary":"<p>Crystal bindings for https://ipapi.co (IP Address Location &amp; Geolocation API)</p>","types":[{"html_id":"ipapi/Ipapi/AuthorizationFailedException","path":"Ipapi/AuthorizationFailedException.html","kind":"class","full_name":"Ipapi::AuthorizationFailedException","name":"AuthorizationFailedException","abstract":false,"superclass":{"html_id":"ipapi/Ipapi/Error","kind":"class","full_name":"Ipapi::Error","name":"Error"},"ancestors":[{"html_id":"ipapi/Ipapi/Error","kind":"class","full_name":"Ipapi::Error","name":"Error"},{"html_id":"ipapi/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"ipapi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ipapi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ipapi.cr","line_number":112,"url":null}],"repository_name":"ipapi","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"ipapi/Ipapi","kind":"module","full_name":"Ipapi","name":"Ipapi"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":113,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"ipapi/Ipapi/Client","path":"Ipapi/Client.html","kind":"class","full_name":"Ipapi::Client","name":"Client","abstract":false,"superclass":{"html_id":"ipapi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ipapi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ipapi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ipapi.cr","line_number":42,"url":null}],"repository_name":"ipapi","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"ipapi/Ipapi","kind":"module","full_name":"Ipapi","name":"Ipapi"},"constructors":[{"html_id":"new(api_key:String|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"String | ::Nil"}],"args_string":"(api_key : String | Nil = nil)","args_html":"(api_key : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/ipapi.cr","line_number":43,"url":null},"def":{"name":"new","args":[{"name":"api_key","default_value":"nil","external_name":"api_key","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(api_key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"asn(ip_address:String|Nil=nil):String-instance-method","name":"asn","doc":"Retrive autonomous system number of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive autonomous system number of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"asn","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"asn\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"city(ip_address:String|Nil=nil):String-instance-method","name":"city","doc":"Retrive city name of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive city name of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"city","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"city\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"continent_code(ip_address:String|Nil=nil):String-instance-method","name":"continent_code","doc":"Retrive country code (2 letter, ISO 3166-1 alpha-2) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive country code (2 letter, ISO 3166-1 alpha-2) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"continent_code","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"continent_code\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"country(ip_address:String|Nil=nil):String-instance-method","name":"country","doc":"Retrive country code (2 letter, ISO 3166-1 alpha-2) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive country code (2 letter, ISO 3166-1 alpha-2) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"country","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"country\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"country_area(ip_address:String|Nil=nil):String-instance-method","name":"country_area","doc":"Retrive area of the country (in sq km) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive area of the country (in sq km) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"country_area","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"country_area\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"country_calling_code(ip_address:String|Nil=nil):String-instance-method","name":"country_calling_code","doc":"Retrive country calling code (dial in code, comma separated) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive country calling code (dial in code, comma separated) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"country_calling_code","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"country_calling_code\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"country_capital(ip_address:String|Nil=nil):String-instance-method","name":"country_capital","doc":"Retrive capital of the country of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive capital of the country of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"country_capital","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"country_capital\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"country_code(ip_address:String|Nil=nil):String-instance-method","name":"country_code","doc":"Retrive country code (2 letter, ISO 3166-1 alpha-2) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive country code (2 letter, ISO 3166-1 alpha-2) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"country_code","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"country_code\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"country_code_iso3(ip_address:String|Nil=nil):String-instance-method","name":"country_code_iso3","doc":"Retrive country code (3 letter, ISO 3166-1 alpha-3) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive country code (3 letter, ISO 3166-1 alpha-3) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"country_code_iso3","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"country_code_iso3\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"country_name(ip_address:String|Nil=nil):String-instance-method","name":"country_name","doc":"Retrive short country name of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive short country name of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"country_name","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"country_name\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"country_population(ip_address:String|Nil=nil):String-instance-method","name":"country_population","doc":"Retrive population of the country of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive population of the country of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"country_population","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"country_population\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"country_tld(ip_address:String|Nil=nil):String-instance-method","name":"country_tld","doc":"Retrive country specific TLD (top-level domain) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive country specific TLD (top-level domain) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"country_tld","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"country_tld\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"currency(ip_address:String|Nil=nil):String-instance-method","name":"currency","doc":"Retrive currency code (ISO 4217) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive currency code (ISO 4217) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"currency","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"currency\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"currency_name(ip_address:String|Nil=nil):String-instance-method","name":"currency_name","doc":"Retrive currency name of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive currency name of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"currency_name","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"currency_name\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"in_eu(ip_address:String|Nil=nil):String-instance-method","name":"in_eu","doc":"Retrive whether IP address belongs to a country that is a member of the European Union (EU) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive whether IP address belongs to a country that is a member of the European Union (EU) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"in_eu","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"in_eu\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"ip(ip_address:String|Nil=nil):String-instance-method","name":"ip","doc":"Retrive public (external) IP address (same as URL `ip`) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive public (external) IP address (same as URL <code><a href=\"../Ipapi/Client.html#ip%28ip_address%3AString%7CNil%3Dnil%29%3AString-instance-method\">#ip</a></code>) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"ip","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"ip\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"languages(ip_address:String|Nil=nil):String-instance-method","name":"languages","doc":"Retrive languages spoken (comma separated 2 or 3 letter ISO 639 code with optional hyphen separated country suffix) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive languages spoken (comma separated 2 or 3 letter ISO 639 code with optional hyphen separated country suffix) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"languages","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"languages\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"latitude(ip_address:String|Nil=nil):String-instance-method","name":"latitude","doc":"Retrive latitude of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive latitude of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"latitude","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"latitude\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"latlong(ip_address:String|Nil=nil):String-instance-method","name":"latlong","doc":"Retrive comma separated latitude and longitude of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive comma separated latitude and longitude of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"latlong","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"latlong\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"locate(ip_address:String|Nil=nil):Location|Nil-instance-method","name":"locate","doc":"Retrive the location of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive the location of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : Location | Nil","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : <a href=\"../Ipapi/Location.html\">Location</a> | Nil","location":{"filename":"src/ipapi.cr","line_number":48,"url":null},"def":{"name":"locate","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"Location | ::Nil","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"json\"].compact)).to_s\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_locate_response(response)\n"},"external_var":false},{"html_id":"longitude(ip_address:String|Nil=nil):String-instance-method","name":"longitude","doc":"Retrive longitude of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive longitude of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"longitude","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"longitude\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"org(ip_address:String|Nil=nil):String-instance-method","name":"org","doc":"Retrive organization name of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive organization name of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"org","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"org\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"postal(ip_address:String|Nil=nil):String-instance-method","name":"postal","doc":"Retrive postal code / zip code of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive postal code / zip code of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"postal","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"postal\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"region(ip_address:String|Nil=nil):String-instance-method","name":"region","doc":"Retrive region name (administrative division) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive region name (administrative division) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"region","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"region\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"region_code(ip_address:String|Nil=nil):String-instance-method","name":"region_code","doc":"Retrive region code of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive region code of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"region_code","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"region_code\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"timezone(ip_address:String|Nil=nil):String-instance-method","name":"timezone","doc":"Retrive timezone (IANA format i.e. “Area/Location”) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive timezone (IANA format i.e.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"timezone","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"timezone\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false},{"html_id":"utc_offset(ip_address:String|Nil=nil):String-instance-method","name":"utc_offset","doc":"Retrive UTC offset (with daylight saving time) as `+HHMM` or `-HHMM` (`HH` is hours, `MM` is minutes) of a specific IP address.\nIf `ip_address` is `nil`, use the client's IP.","summary":"<p>Retrive UTC offset (with daylight saving time) as <code>+HHMM</code> or <code>-HHMM</code> (<code>HH</code> is hours, <code>MM</code> is minutes) of a specific IP address.</p>","abstract":false,"args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"args_string":"(ip_address : String | Nil = nil) : String","args_html":"(ip_address : String | Nil = <span class=\"n\">nil</span>) : String","location":{"filename":"src/ipapi.cr","line_number":57,"url":null},"def":{"name":"utc_offset","args":[{"name":"ip_address","default_value":"nil","external_name":"ip_address","restriction":"String | ::Nil"}],"return_type":"String","visibility":"Public","body":"url = (Path.posix([API_URL, ip_address, \"utc_offset\"].compact)).to_s\n\nif @api_key\n  url = url + \"?access_key=#{@api_key}\"\nend\n\nresponse = HTTP::Client.get(url)\n\nparse_field_response(response)\n"},"external_var":false}]},{"html_id":"ipapi/Ipapi/Error","path":"Ipapi/Error.html","kind":"class","full_name":"Ipapi::Error","name":"Error","abstract":false,"superclass":{"html_id":"ipapi/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"ipapi/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"ipapi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ipapi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ipapi.cr","line_number":109,"url":null}],"repository_name":"ipapi","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"ipapi/Ipapi/AuthorizationFailedException","kind":"class","full_name":"Ipapi::AuthorizationFailedException","name":"AuthorizationFailedException"},{"html_id":"ipapi/Ipapi/PageNotFoundException","kind":"class","full_name":"Ipapi::PageNotFoundException","name":"PageNotFoundException"},{"html_id":"ipapi/Ipapi/RateLimitedException","kind":"class","full_name":"Ipapi::RateLimitedException","name":"RateLimitedException"}],"namespace":{"html_id":"ipapi/Ipapi","kind":"module","full_name":"Ipapi","name":"Ipapi"},"doc":"Generic error.","summary":"<p>Generic error.</p>"},{"html_id":"ipapi/Ipapi/ErrorResponse","path":"Ipapi/ErrorResponse.html","kind":"class","full_name":"Ipapi::ErrorResponse","name":"ErrorResponse","abstract":false,"superclass":{"html_id":"ipapi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ipapi/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"ipapi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ipapi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ipapi.cr","line_number":162,"url":null}],"repository_name":"ipapi","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"ipapi/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"ipapi/Ipapi","kind":"module","full_name":"Ipapi","name":"Ipapi"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/ipapi.cr","line_number":163,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,__pull_for_json_serializablepull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"args_string":"(*, __pull_for_json_serializable pull : JSON::PullParser)","args_html":"(*, __pull_for_json_serializable pull : JSON::PullParser)","location":{"filename":"src/ipapi.cr","line_number":163,"url":null},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__pull_for_json_serializable: pull)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"error?:Bool-instance-method","name":"error?","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":166,"url":null},"def":{"name":"error?","return_type":"Bool","visibility":"Public","body":"@error"},"external_var":false},{"html_id":"ip:String-instance-method","name":"ip","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":165,"url":null},"def":{"name":"ip","return_type":"String","visibility":"Public","body":"@ip"},"external_var":false},{"html_id":"reason:String-instance-method","name":"reason","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":167,"url":null},"def":{"name":"reason","return_type":"String","visibility":"Public","body":"@reason"},"external_var":false}]},{"html_id":"ipapi/Ipapi/Location","path":"Ipapi/Location.html","kind":"class","full_name":"Ipapi::Location","name":"Location","abstract":false,"superclass":{"html_id":"ipapi/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"ipapi/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"ipapi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ipapi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ipapi.cr","line_number":130,"url":null}],"repository_name":"ipapi","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"ipapi/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"ipapi/Ipapi","kind":"module","full_name":"Ipapi","name":"Ipapi"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/ipapi.cr","line_number":131,"url":null},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"},"external_var":false},{"html_id":"new(*,__pull_for_json_serializablepull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"args_string":"(*, __pull_for_json_serializable pull : JSON::PullParser)","args_html":"(*, __pull_for_json_serializable pull : JSON::PullParser)","location":{"filename":"src/ipapi.cr","line_number":131,"url":null},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"pull","external_name":"__pull_for_json_serializable","restriction":"::JSON::PullParser"}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(__pull_for_json_serializable: pull)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"asn:String-instance-method","name":"asn","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":158,"url":null},"def":{"name":"asn","return_type":"String","visibility":"Public","body":"@asn"},"external_var":false},{"html_id":"city:String-instance-method","name":"city","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":136,"url":null},"def":{"name":"city","return_type":"String","visibility":"Public","body":"@city"},"external_var":false},{"html_id":"continent_code:String-instance-method","name":"continent_code","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":145,"url":null},"def":{"name":"continent_code","return_type":"String","visibility":"Public","body":"@continent_code"},"external_var":false},{"html_id":"country:String-instance-method","name":"country","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":139,"url":null},"def":{"name":"country","return_type":"String","visibility":"Public","body":"@country"},"external_var":false},{"html_id":"country_area:Float64-instance-method","name":"country_area","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":156,"url":null},"def":{"name":"country_area","return_type":"Float64","visibility":"Public","body":"@country_area"},"external_var":false},{"html_id":"country_calling_code:String-instance-method","name":"country_calling_code","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":152,"url":null},"def":{"name":"country_calling_code","return_type":"String","visibility":"Public","body":"@country_calling_code"},"external_var":false},{"html_id":"country_capital:String-instance-method","name":"country_capital","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":143,"url":null},"def":{"name":"country_capital","return_type":"String","visibility":"Public","body":"@country_capital"},"external_var":false},{"html_id":"country_code:String-instance-method","name":"country_code","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":141,"url":null},"def":{"name":"country_code","return_type":"String","visibility":"Public","body":"@country_code"},"external_var":false},{"html_id":"country_code_iso3:String-instance-method","name":"country_code_iso3","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":142,"url":null},"def":{"name":"country_code_iso3","return_type":"String","visibility":"Public","body":"@country_code_iso3"},"external_var":false},{"html_id":"country_name:String-instance-method","name":"country_name","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":140,"url":null},"def":{"name":"country_name","return_type":"String","visibility":"Public","body":"@country_name"},"external_var":false},{"html_id":"country_population:Int32-instance-method","name":"country_population","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":157,"url":null},"def":{"name":"country_population","return_type":"Int32","visibility":"Public","body":"@country_population"},"external_var":false},{"html_id":"country_tld:String-instance-method","name":"country_tld","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":144,"url":null},"def":{"name":"country_tld","return_type":"String","visibility":"Public","body":"@country_tld"},"external_var":false},{"html_id":"currency:String-instance-method","name":"currency","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":153,"url":null},"def":{"name":"currency","return_type":"String","visibility":"Public","body":"@currency"},"external_var":false},{"html_id":"currency_name:String-instance-method","name":"currency_name","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":154,"url":null},"def":{"name":"currency_name","return_type":"String","visibility":"Public","body":"@currency_name"},"external_var":false},{"html_id":"in_eu?:Bool-instance-method","name":"in_eu?","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":146,"url":null},"def":{"name":"in_eu?","return_type":"Bool","visibility":"Public","body":"@in_eu"},"external_var":false},{"html_id":"ip:String-instance-method","name":"ip","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":133,"url":null},"def":{"name":"ip","return_type":"String","visibility":"Public","body":"@ip"},"external_var":false},{"html_id":"languages:String-instance-method","name":"languages","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":155,"url":null},"def":{"name":"languages","return_type":"String","visibility":"Public","body":"@languages"},"external_var":false},{"html_id":"latitude:Float64-instance-method","name":"latitude","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":148,"url":null},"def":{"name":"latitude","return_type":"Float64","visibility":"Public","body":"@latitude"},"external_var":false},{"html_id":"longitude:Float64-instance-method","name":"longitude","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":149,"url":null},"def":{"name":"longitude","return_type":"Float64","visibility":"Public","body":"@longitude"},"external_var":false},{"html_id":"network:String-instance-method","name":"network","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":134,"url":null},"def":{"name":"network","return_type":"String","visibility":"Public","body":"@network"},"external_var":false},{"html_id":"org:String-instance-method","name":"org","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":159,"url":null},"def":{"name":"org","return_type":"String","visibility":"Public","body":"@org"},"external_var":false},{"html_id":"postal:String|Nil-instance-method","name":"postal","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":147,"url":null},"def":{"name":"postal","return_type":"String | ::Nil","visibility":"Public","body":"@postal"},"external_var":false},{"html_id":"region:String|Nil-instance-method","name":"region","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":137,"url":null},"def":{"name":"region","return_type":"String | ::Nil","visibility":"Public","body":"@region"},"external_var":false},{"html_id":"region_code:String|Nil-instance-method","name":"region_code","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":138,"url":null},"def":{"name":"region_code","return_type":"String | ::Nil","visibility":"Public","body":"@region_code"},"external_var":false},{"html_id":"timezone:String-instance-method","name":"timezone","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":150,"url":null},"def":{"name":"timezone","return_type":"String","visibility":"Public","body":"@timezone"},"external_var":false},{"html_id":"utc_offset:String-instance-method","name":"utc_offset","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":151,"url":null},"def":{"name":"utc_offset","return_type":"String","visibility":"Public","body":"@utc_offset"},"external_var":false},{"html_id":"version:String-instance-method","name":"version","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":135,"url":null},"def":{"name":"version","return_type":"String","visibility":"Public","body":"@version"},"external_var":false}]},{"html_id":"ipapi/Ipapi/PageNotFoundException","path":"Ipapi/PageNotFoundException.html","kind":"class","full_name":"Ipapi::PageNotFoundException","name":"PageNotFoundException","abstract":false,"superclass":{"html_id":"ipapi/Ipapi/Error","kind":"class","full_name":"Ipapi::Error","name":"Error"},"ancestors":[{"html_id":"ipapi/Ipapi/Error","kind":"class","full_name":"Ipapi::Error","name":"Error"},{"html_id":"ipapi/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"ipapi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ipapi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ipapi.cr","line_number":118,"url":null}],"repository_name":"ipapi","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"ipapi/Ipapi","kind":"module","full_name":"Ipapi","name":"Ipapi"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":119,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"ipapi/Ipapi/RateLimitedException","path":"Ipapi/RateLimitedException.html","kind":"class","full_name":"Ipapi::RateLimitedException","name":"RateLimitedException","abstract":false,"superclass":{"html_id":"ipapi/Ipapi/Error","kind":"class","full_name":"Ipapi::Error","name":"Error"},"ancestors":[{"html_id":"ipapi/Ipapi/Error","kind":"class","full_name":"Ipapi::Error","name":"Error"},{"html_id":"ipapi/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"ipapi/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"ipapi/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ipapi.cr","line_number":124,"url":null}],"repository_name":"ipapi","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"ipapi/Ipapi","kind":"module","full_name":"Ipapi","name":"Ipapi"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/ipapi.cr","line_number":125,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]}]}]}})